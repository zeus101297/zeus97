<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Bảng VN30 Realtime</title>
  <style>
    body {
      background-color: #121212;
      color: white;
      font-family: 'Arial', sans-serif;
      margin: 0;
      padding: 0;
    }
    .container {
      padding: 20px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      background-color: #1f1f1f;
      border-radius: 8px;
      overflow: hidden;
    }
    th, td {
      padding: 12px 15px;
      text-align: center;
    }
    th {
      background-color: #272727;
    }
    tr:nth-child(even) {
      background-color: #2c2c2c;
    }
    .loading {
      text-align: center;
      padding: 50px;
      font-size: 24px;
      color: #00ff88;
    }
  </style>
</head>
<body>
<div class="container">
  <h1>BẢNG GIÁ VN30 Realtime</h1>
  <div id="loading" class="loading">Đang tải dữ liệu...</div>
  <table id="vn30-table" style="display:none;">
    <thead>
      <tr>
        <th>Mã</th>
        <th>Giá</th>
        <th>Thay đổi (%)</th>
        <th>Khối lượng</th>
      </tr>
    </thead>
    <tbody id="vn30-body"></tbody>
  </table>
</div>

<script>
const API_URL = 'https://your-proxy-url.onrender.com/api/vn30'; // Thay bằng URL thật của proxy sau khi deploy

async function fetchData() {
  const loading = document.getElementById('loading');
  const table = document.getElementById('vn30-table');
  const tbody = document.getElementById('vn30-body');

  loading.style.display = 'block';
  table.style.display = 'none';

  try {
    const res = await fetch(API_URL);
    const json = await res.json();
    const stocks = json.data;

    tbody.innerHTML = '';
    stocks.forEach(stock => {
      const row = `<tr>
        <td>${stock.symbol}</td>
        <td>${parseFloat(stock.matchPrice/1000).toFixed(2)}</td>
        <td style="color:${stock.changePercent > 0 ? 'lime' : stock.changePercent < 0 ? 'red' : 'white'}">
          ${parseFloat(stock.changePercent).toFixed(2)}%
        </td>
        <td>${(stock.accumulatedVolume).toLocaleString()}</td>
      </tr>`;
      tbody.innerHTML += row;
    });

    loading.style.display = 'none';
    table.style.display = 'table';
  } catch (e) {
    loading.innerText = "Lỗi tải dữ liệu!";
    console.error(e);
  }
}

// Load ban đầu
fetchData();

// Tự động refresh mỗi 30 giây
setInterval(fetchData, 30000);
</script>

</body>
</html>
